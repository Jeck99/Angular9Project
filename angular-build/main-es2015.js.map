{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/app/add-user/add-user.component.ts","./src/app/add-user/add-user.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/data.service.ts","./src/app/details/details.component.ts","./src/app/details/details.component.html","./src/app/edit-user/edit-user.component.ts","./src/app/edit-user/edit-user.component.html","./src/app/home/home.component.ts","./src/app/users/users.component.ts","./src/app/users/users.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.less']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>about works!</p>\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { DataService } from '../data.service';\n\n/** Error when invalid control is dirty, touched, or submitted. */\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.less']\n})\nexport class AddUserComponent implements OnInit {\n  @ViewChild(\"fileUpload\", { static: false }) fileUpload: ElementRef; files = [];\n\n  constructor(private router: Router, private dataService: DataService, private formBuilder: FormBuilder) { }\n  usersForm: FormGroup;\n  matcher = new MyErrorStateMatcher();\n\n  firstName = '';\n  lastName = '';\n  prefixOptions = ['Mr.', 'Mrs.', 'Ms.', 'Dr.', 'Miss.',];\n  title = '';\n  jobDescriptor = '';\n  phoneNumber = '';\n  email = '';\n  imageUrl = '';\n\n  isLoadingResults = false;\n\n  ngOnInit(): void {\n    this.initUserForm();\n  }\n  private initUserForm() {\n    this.usersForm = this.formBuilder.group({\n      firstName: [null, Validators.required],\n      lastName: [null, Validators.required],\n      prefix: [null, Validators.required],\n      title: [null, Validators.required],\n      jobDescriptor: [null],\n      phoneNumber: [null, Validators.required],\n      email: [null, Validators.required],\n      imageUrl: [null],\n    });\n  }\n\n  onFormSubmit() {\n    this.isLoadingResults = true;\n    this.dataService.addUser(this.usersForm.value)\n      .subscribe((res: any) => {\n        const id = res.id;\n        this.isLoadingResults = false;\n        this.router.navigate(['/details', id]);\n      }, (err: any) => {\n        console.log(err);\n        this.isLoadingResults = false;\n      });\n  }\n\n}\n","<div class=\"example-container mat-elevation-z8\">\n    <h2>Add User</h2>\n    <div class=\"example-loading-shade\" *ngIf=\"isLoadingResults\">\n        <mat-spinner *ngIf=\"isLoadingResults\"></mat-spinner>\n    </div>\n    <div class=\"button-row\">\n        <a mat-flat-button color=\"primary\" [routerLink]=\"['/users']\">\n            <mat-icon>list</mat-icon>\n        </a>\n        <!-- <a mat-flat-button color=\"primary\" (click)=\"casesDetails()\"><mat-icon>info</mat-icon></a> -->\n    </div>\n    <mat-card class=\"example-card\">\n        <form [formGroup]=\"usersForm\" (ngSubmit)=\"onFormSubmit()\">\n            <mat-form-field class=\"example-full-width\">\n                <mat-label>Prefix</mat-label>\n                <mat-select formControlName=\"prefix\">\n                    <mat-option *ngFor=\"let prfxOption of prefixOptions\" [value]=\"prfxOption\">\n                        {{prfxOption}}\n                    </mat-option>\n                </mat-select>\n                <mat-error>\n                    <span *ngIf=\"!usersForm.get('prefix').valid && usersForm.get('prefix').touched\">Please choose\n                        Prefix</span>\n                </mat-error>\n            </mat-form-field>\n            <mat-form-field class=\"example-full-width\">\n                <mat-label>First Name</mat-label>\n                <input matInput placeholder=\"First Name\" formControlName=\"firstName\" [errorStateMatcher]=\"matcher\">\n                <mat-error>\n                    <span *ngIf=\"!usersForm.get('firstName').valid && usersForm.get('firstName').touched\">Please enter\n                        First Name</span>\n                </mat-error>\n            </mat-form-field>\n\n            <mat-form-field class=\"example-full-width\">\n                <mat-label>lastName</mat-label>\n                <input matInput placeholder=\"lastName\" formControlName=\"lastName\" [errorStateMatcher]=\"matcher\">\n                <mat-error>\n                    <span *ngIf=\"!usersForm.get('lastName').valid && usersForm.get('lastName').touched\">Please enter\n                        lastName</span>\n                </mat-error>\n            </mat-form-field>\n\n            <mat-form-field class=\"example-full-width\">\n                <mat-label>title</mat-label>\n                <input matInput placeholder=\"title\" formControlName=\"title\" [errorStateMatcher]=\"matcher\">\n                <mat-error>\n                    <span *ngIf=\"!usersForm.get('title').valid && usersForm.get('title').touched\">Please enter\n                        title</span>\n                </mat-error>\n            </mat-form-field>\n\n            <mat-form-field class=\"example-full-width\">\n                <mat-label>jobDescriptor</mat-label>\n                <input matInput placeholder=\"jobDescriptor\" formControlName=\"jobDescriptor\"\n                    [errorStateMatcher]=\"matcher\">\n                <mat-error>\n                    <span *ngIf=\"!usersForm.get('jobDescriptor').valid && usersForm.get('jobDescriptor').touched\">Please\n                        enter jobDescriptor</span>\n                </mat-error>\n            </mat-form-field>\n\n            <mat-form-field class=\"example-full-width\">\n                <mat-label>phoneNumber</mat-label>\n                <input matInput placeholder=\"phoneNumber\" formControlName=\"phoneNumber\" [errorStateMatcher]=\"matcher\">\n                <mat-error>\n                    <span *ngIf=\"!usersForm.get('phoneNumber').valid && usersForm.get('phoneNumber').touched\">Please\n                        enter phoneNumber</span>\n                </mat-error>\n            </mat-form-field>\n\n            <mat-form-field class=\"example-full-width\">\n                <mat-label>email</mat-label>\n                <input matInput placeholder=\"email\" formControlName=\"email\" [errorStateMatcher]=\"matcher\">\n                <mat-error>\n                    <span *ngIf=\"!usersForm.get('email').valid && usersForm.get('email').touched\">Please enter\n                        email</span>\n                </mat-error>\n            </mat-form-field>\n\n            <mat-label>Upload</mat-label>\n            <input placeholder=\"Upload\" formControlName=\"imageUrl\" accept=\"image/*\" type=\"file\">\n\n            <div class=\"button-row\">\n                <button type=\"submit\" [disabled]=\"!usersForm.valid\" mat-flat-button color=\"primary\">\n                    <mat-icon>save</mat-icon>\n                </button>\n            </div>\n        </form>\n    </mat-card>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { AboutComponent } from './about/about.component';\nimport { UsersComponent } from './users/users.component';\nimport { DetailsComponent } from './details/details.component';\nimport { AddUserComponent } from './add-user/add-user.component';\nimport { EditUserComponent } from './edit-user/edit-user.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full'},\n  { path: 'home', component: HomeComponent },\n  { path: 'about', component: AboutComponent },\n  { path: 'users', component: UsersComponent },\n  { path: 'details/:id', component: DetailsComponent },\n  { path: 'add-user', component: AddUserComponent },\n  { path: 'edit-user/:id', component: EditUserComponent },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent {\n}\n","<mat-toolbar color=\"primary\">\r\n    <h1>\r\n        Angular 9 project\r\n    </h1>\r\n    <button mat-button routerLink=\"/\">Home</button>\r\n    <button mat-button routerLink=\"/about\">About</button>\r\n    <button mat-button routerLink=\"/users\">Users</button>\r\n</mat-toolbar>\r\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HomeComponent } from './home/home.component';\nimport { AboutComponent } from './about/about.component';\nimport { UsersComponent } from './users/users.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { DetailsComponent } from './details/details.component';\nimport { AddUserComponent } from './add-user/add-user.component';\nimport { FormsModule, ReactiveFormsModule }         from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { EditUserComponent } from './edit-user/edit-user.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    AboutComponent,\n    UsersComponent,\n    DetailsComponent,\n    AddUserComponent,\n    EditUserComponent,\n  ],\n  imports: [\n    ReactiveFormsModule,\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCardModule,\n    MatProgressSpinnerModule,\n    MatInputModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatSortModule,\n    MatTableModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatButtonToggleModule,\n    MatSelectModule,\n  ],\n  exports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpParams, HttpHeaders, HttpEvent, HttpEventType } from '@angular/common/http';\nimport { throwError, Observable, of} from 'rxjs';\nimport { retry, catchError, tap, map } from 'rxjs/operators';\nimport { User } from './user';\n\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  public first: string = \"\";\n  public prev: string = \"\";\n  public next: string = \"\";\n  public last: string = \"\";\n\n  private usersApiUrl = \"http://localhost:3000/users\";\n\n  constructor(private httpClient: HttpClient) { }\n  //GET USERS\n  public sendGetUsersRequest() {\n    return this.httpClient.get(this.usersApiUrl).pipe(retry(3), catchError(this.handleError));\n  }\n  //GET FIRST 4 USERS\n  public sendGetFirstFourUsersRequest() {\n    // Add safe, URL encoded _page and _limit parameters \n    return this.httpClient.get<User>(this.usersApiUrl, { params: new HttpParams({ fromString: \"_page=1&_limit=4\" }), observe: \"response\" }).pipe(retry(3), catchError(this.handleError), tap(res => {\n      console.log(res.headers.get('Link'));\n      this.parseLinkHeader(res.headers.get('Link'));\n    }));\n  }\n  //GET FROM URL\n  public sendGetRequestToUrl(url: string) {\n    return this.httpClient.get<User>(url, { observe: \"response\" }).pipe(retry(3), catchError(this.handleError), tap(res => {\n      console.log(res.headers.get('Link'));\n      this.parseLinkHeader(res.headers.get('Link'));\n\n    }));\n  }\n  //ERROR HANDLING\n  handleError(error: HttpErrorResponse) {\n    let errorMessage = 'Unknown error!';\n    if (error.error instanceof ErrorEvent) {\n      // Client-side errors\n      errorMessage = `Error: ${error.error.message}`;\n    } else {\n      // Server-side errors\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    window.alert(errorMessage);\n    return throwError(errorMessage);\n  }\n  parseLinkHeader(header) {\n    if (header.length == 0) {\n      return;\n    }\n\n    let parts = header.split(',');\n    var links = {};\n    parts.forEach(p => {\n      let section = p.split(';');\n      var url = section[0].replace(/<(.*)>/, '$1').trim();\n      var name = section[1].replace(/rel=\"(.*)\"/, '$1').trim();\n      links[name] = url;\n\n    });\n\n    this.first = links[\"first\"];\n    this.last = links[\"last\"];\n    this.prev = links[\"prev\"];\n    this.next = links[\"next\"];\n  }\n  //SIMPLE CRUD FUNCTIONS\n  getUsers(): Observable<User[]> {\n    return this.httpClient.get<User[]>(`${this.usersApiUrl}`)\n      .pipe(\n        tap(Users => console.log('fetched Users')),\n        catchError(this.handleCrudError('getUsers', []))\n      );\n  }\n\n  getUserById(id: string): Observable<User> {\n    const url = `${this.usersApiUrl}/${id}`;\n    return this.httpClient.get<User>(url).pipe(\n      tap(_ => console.log(`fetched Users id=${id}`)),\n      catchError(this.handleCrudError<User>(`getUsersById id=${id}`))\n    );\n  }\n\n  addUser(Users: User): Observable<User> {\n    return this.httpClient.post<User>(this.usersApiUrl, Users, httpOptions).pipe(\n      tap((u: User) => console.log(`added Users w/ id=${u.id}`)),\n      catchError(this.handleCrudError<User>('addUsers'))\n    );\n  }\n\n  updateUser(id: number, Users: User): Observable<any> {\n    const url = `${this.usersApiUrl}/${id}`;\n    return this.httpClient.put(url, Users, httpOptions).pipe(\n      tap(_ => console.log(`updated Users id=${id}`)),\n      catchError(this.handleCrudError<any>('updateUsers'))\n    );\n  }\n\n  deleteUser(id: string): Observable<User> {\n    const url = `${this.usersApiUrl}/${id}`;\n    return this.httpClient.delete<User>(url, httpOptions).pipe(\n      tap(_ => console.log(`deleted Users id=${id}`)),\n      catchError(this.handleCrudError<User>('deleteUsers'))\n    );\n  }\n\n\n  public upload(formData) {\n    return this.httpClient.post<any>(this.usersApiUrl, formData, {  \n        reportProgress: true,  \n        observe: 'events'  \n      });\n    }\n  //GENERAL ERROR HANDLING FOR THE CRUD FUNCTIONS\n  handleCrudError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n  \n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n  \n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { User } from '../user';\nimport { DataService } from '../data.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n@Component({\n  selector: 'app-details',\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.less']\n})\nexport class DetailsComponent implements OnInit {\n  user: User = { id: 0, firstName: '', lastName: '', prefix: '', title: '', jobDescriptor: '', phoneNumber: '', email: '', imageUrl: '' };\n  isLoadingResults = true;\n  constructor(private route: ActivatedRoute, private dataService: DataService, private router: Router) { }\n\n  getUserDetails(id: string) {\n    this.dataService.getUserById(id)\n      .subscribe((data: any) => {\n        this.user = data;\n        console.log(this.user);\n        this.isLoadingResults = false;\n      });\n  }\n  deleteUser(id: any) {\n    this.isLoadingResults = true;\n    this.dataService.deleteUser(id)\n      .subscribe(res => {\n        this.isLoadingResults = false;\n        this.router.navigate(['/users']);\n      }, (err) => {\n        console.log(err);\n        this.isLoadingResults = false;\n      }\n      );\n  }\n  ngOnInit(): void {\n    this.getUserDetails(this.route.snapshot.params.id);\n  }\n}\n","<div class=\"example-container mat-elevation-z8\">\n    <h2>User Details</h2>\n    <div class=\"example-loading-shade\"\n         *ngIf=\"isLoadingResults\">\n      <mat-spinner *ngIf=\"isLoadingResults\"></mat-spinner>\n    </div>\n    <div class=\"button-row\">\n      <a mat-flat-button color=\"primary\" [routerLink]=\"['/users']\"><mat-icon>list</mat-icon></a>\n    </div>\n    <mat-card class=\"example-card\">\n        <mat-card-header>\n            <mat-card-title><span>{{user.prefix}}</span>{{user.firstName}}</mat-card-title>\n            <mat-card-subtitle>{{user.lastName}}\n            </mat-card-subtitle>\n        </mat-card-header>\n        <mat-card-content>\n            <p>{{user.title}}</p>\n            <p>{{user.jobDescriptor}}</p>\n            <p>{{user.phoneNumber}}</p>\n            <p>{{user.email}}</p>\n            <img style=\"height:30%; width: 30%;\" src=\"{{ user.imageUrl }}\" />\n        </mat-card-content>\n        <mat-card-actions>\n            <a mat-flat-button color=\"primary\" [routerLink]=\"['/edit-user', user.id]\"><mat-icon>edit</mat-icon> Edit</a>\n            <a mat-flat-button color=\"warn\" (click)=\"deleteUser(user.id)\"><mat-icon>delete</mat-icon> Delete</a>\n          </mat-card-actions>\n    </mat-card>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { DataService } from '../data.service';\nimport { MyErrorStateMatcher } from '../add-user/add-user.component';\n\n@Component({\n  selector: 'app-edit-user',\n  templateUrl: './edit-user.component.html',\n  styleUrls: ['./edit-user.component.less']\n})\nexport class EditUserComponent implements OnInit {\n\n  constructor(private router: Router, private route: ActivatedRoute, private dataService: DataService, private formBuilder: FormBuilder) { }\n\n  usersForm: FormGroup;\n  matcher = new MyErrorStateMatcher();\n\n  id=0;\n  firstName = '';\n  lastName = '';\n  prefixOptions = ['Mr.', 'Mrs.', 'Ms.', 'Dr.', 'Miss.',];\n  title = '';\n  jobDescriptor = '';\n  phoneNumber = '';\n  email = '';\n  imageUrl = '';\n\n  isLoadingResults = false;\n\n  ngOnInit(): void {\n    this.popUserFields();\n  }\n  private popUserFields() {\n    this.getUserById(this.route.snapshot.params.id);\n    this.usersForm = this.formBuilder.group({\n      firstName: [null, Validators.required],\n      lastName: [null, Validators.required],\n      prefix: [null, Validators.required],\n      title: [null, Validators.required],\n      jobDescriptor: [null, Validators.required],\n      phoneNumber: [null, Validators.required],\n      email: [null, Validators.required],\n      imageUrl: [null, Validators.required]\n    });\n  }\n\n  getUserById(id: any) {\n    this.dataService.getUserById(id).subscribe((data: any) => {\n      this.id = data.id;\n      this.usersForm.setValue({\n        firstName: data.firstName,\n        lastName: data.lastName,\n        prefix: data.prefix,\n        title: data.title,\n        jobDescriptor: data.jobDescriptor,\n        phoneNumber: data.phoneNumber,\n        email: data.email,\n        imageUrl: data.imageUrl\n      });\n    });\n  }\n  onFormEditSubmit() {\n    this.isLoadingResults = true;\n    this.dataService.updateUser(this.id, this.usersForm.value)\n      .subscribe((res: any) => {\n          const id = res._id;\n          this.isLoadingResults = false;\n          this.router.navigate(['/details', id]);\n        }, (err: any) => {\n          console.log(err);\n          this.isLoadingResults = false;\n        }\n      );\n  }\n  showUserDetails() {\n    this.router.navigate(['/details', this.id]);\n  }\n}\n","<div class=\"example-container mat-elevation-z8\">\n    <h2>Edit User</h2>\n    <div class=\"example-loading-shade\" *ngIf=\"isLoadingResults\">\n        <mat-spinner *ngIf=\"isLoadingResults\"></mat-spinner>\n    </div>\n    <div class=\"button-row\">\n        <a mat-flat-button color=\"primary\" [routerLink]=\"['/users']\">\n            <mat-icon>list</mat-icon>\n        </a>\n        <a mat-flat-button color=\"primary\" (click)=\"showUserDetails()\"><mat-icon>info</mat-icon></a>\n    </div>\n    <mat-card class=\"example-card\">\n        <form [formGroup]=\"usersForm\" (ngSubmit)=\"onFormEditSubmit()\">\n            <mat-form-field class=\"example-full-width\">\n                <mat-label>Prefix</mat-label>\n                <mat-select formControlName=\"prefix\">\n                    <mat-option *ngFor=\"let prfxOption of prefixOptions\" [value]=\"prfxOption\">\n                        {{prfxOption}}\n                    </mat-option>\n                </mat-select>\n                <mat-error>\n                    <span *ngIf=\"!usersForm.get('prefix').valid && usersForm.get('prefix').touched\">Please choose\n                        Prefix</span>\n                </mat-error>\n            </mat-form-field>\n            <mat-form-field class=\"example-full-width\">\n                <mat-label>First Name</mat-label>\n                <input matInput placeholder=\"First Name\" formControlName=\"firstName\" [errorStateMatcher]=\"matcher\">\n                <mat-error>\n                    <span *ngIf=\"!usersForm.get('firstName').valid && usersForm.get('firstName').touched\">Please enter\n                        First Name</span>\n                </mat-error>\n            </mat-form-field>\n\n            <mat-form-field class=\"example-full-width\">\n                <mat-label>lastName</mat-label>\n                <input matInput placeholder=\"lastName\" formControlName=\"lastName\" [errorStateMatcher]=\"matcher\">\n                <mat-error>\n                    <span *ngIf=\"!usersForm.get('lastName').valid && usersForm.get('lastName').touched\">Please enter\n                        lastName</span>\n                </mat-error>\n            </mat-form-field>\n\n            <mat-form-field class=\"example-full-width\">\n                <mat-label>title</mat-label>\n                <input matInput placeholder=\"title\" formControlName=\"title\" [errorStateMatcher]=\"matcher\">\n                <mat-error>\n                    <span *ngIf=\"!usersForm.get('title').valid && usersForm.get('title').touched\">Please enter\n                        title</span>\n                </mat-error>\n            </mat-form-field>\n\n            <mat-form-field class=\"example-full-width\">\n                <mat-label>jobDescriptor</mat-label>\n                <input matInput placeholder=\"jobDescriptor\" formControlName=\"jobDescriptor\"\n                    [errorStateMatcher]=\"matcher\">\n                <mat-error>\n                    <span *ngIf=\"!usersForm.get('jobDescriptor').valid && usersForm.get('jobDescriptor').touched\">Please\n                        enter jobDescriptor</span>\n                </mat-error>\n            </mat-form-field>\n\n            <mat-form-field class=\"example-full-width\">\n                <mat-label>phoneNumber</mat-label>\n                <input matInput placeholder=\"phoneNumber\" formControlName=\"phoneNumber\" [errorStateMatcher]=\"matcher\">\n                <mat-error>\n                    <span *ngIf=\"!usersForm.get('phoneNumber').valid && usersForm.get('phoneNumber').touched\">Please\n                        enter phoneNumber</span>\n                </mat-error>\n            </mat-form-field>\n\n            <mat-form-field class=\"example-full-width\">\n                <mat-label>email</mat-label>\n                <input matInput placeholder=\"email\" formControlName=\"email\" [errorStateMatcher]=\"matcher\">\n                <mat-error>\n                    <span *ngIf=\"!usersForm.get('email').valid && usersForm.get('email').touched\">Please enter\n                        email</span>\n                </mat-error>\n            </mat-form-field>\n\n            <div class=\"button-row\">\n                <button type=\"submit\" [disabled]=\"!usersForm.valid\" mat-flat-button color=\"primary\">\n                    <mat-icon>save</mat-icon>\n                </button>\n            </div>\n        </form>\n    </mat-card>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.less']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { User } from '../user';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.less']\n})\nexport class UsersComponent implements OnInit , OnDestroy {\n  destroy$: Subject<boolean> = new Subject<boolean>();\n  users:User[] = [];\n  displayedColumns: string[] = ['prefix', 'firstName', 'lastName', 'title', 'jobDescriptor'];\n  isLoadingResults = true;\n  constructor(private dataService: DataService) { }\n\n  ngOnInit(): void {\n    this.dataService.getUsers()\n    .subscribe((res: any) => {\n      this.users = res;\n      console.log(this.users);\n      this.isLoadingResults = false;\n    }, err => {\n      console.log(err);\n      this.isLoadingResults = false;\n    });\n  }  \n  ngOnDestroy() {\n    this.destroy$.next(true);\n    // Unsubscribe from the subject\n    this.destroy$.unsubscribe();\n  }\n\n}\n","<div class=\"example-container mat-elevation-z8\">\n    <h2>Users List</h2>\n    <div class=\"example-loading-shade\" *ngIf=\"isLoadingResults\">\n        <mat-spinner *ngIf=\"isLoadingResults\"></mat-spinner>\n    </div>\n    <div class=\"button-row\">\n        <a mat-flat-button color=\"primary\" [routerLink]=\"['/add-user']\">\n            <mat-icon>add</mat-icon> User\n        </a>\n        <a mat-flat-button color=\"accent\" [routerLink]=\"['/Users-stat']\">\n            <mat-icon>bar_chart</mat-icon> Statistic\n        </a>\n    </div>\n    <div class=\"mat-elevation-z8\">\n        <table mat-table [dataSource]=\"users\" class=\"example-table\" matSort matSortActive=\"firstName\" matSortDisableClear\n            matSortDirection=\"asc\">\n\n            <ng-container matColumnDef=\"prefix\">\n                <th mat-header-cell *matHeaderCellDef>Users prefix</th>\n                <td mat-cell *matCellDef=\"let row\">{{row.prefix}}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"lastName\">\n                <th mat-header-cell *matHeaderCellDef>Users lastName</th>\n                <td mat-cell *matCellDef=\"let row\">{{row.lastName}}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"firstName\">\n                <th mat-header-cell *matHeaderCellDef>Users firstName</th>\n                <td mat-cell *matCellDef=\"let row\">{{row.firstName}}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"title\">\n                <th mat-header-cell *matHeaderCellDef>Users title</th>\n                <td mat-cell *matCellDef=\"let row\">{{row.title}}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"jobDescriptor\">\n                <th mat-header-cell *matHeaderCellDef>Users Job Description</th>\n                <td mat-cell *matCellDef=\"let row\">{{row.jobDescriptor}}</td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" [routerLink]=\"['/details/', row.id]\">\n            </tr>\n        </table>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}