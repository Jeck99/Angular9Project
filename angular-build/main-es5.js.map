{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/about/about.component.ts","webpack:///src/app/about/about.component.html","webpack:///src/app/add-user/add-user.component.ts","webpack:///src/app/add-user/add-user.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/data.service.ts","webpack:///src/app/details/details.component.ts","webpack:///src/app/details/details.component.html","webpack:///src/app/edit-user/edit-user.component.ts","webpack:///src/app/edit-user/edit-user.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/users/users.component.ts","webpack:///src/app/users/users.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AboutComponent","selector","templateUrl","styleUrls","MyErrorStateMatcher","control","form","isSubmitted","submitted","invalid","dirty","touched","AddUserComponent","router","dataService","formBuilder","files","matcher","firstName","lastName","prefixOptions","title","jobDescriptor","phoneNumber","email","imageUrl","isLoadingResults","initUserForm","usersForm","group","required","prefix","addUser","value","subscribe","res","navigate","err","console","log","onFormSubmit","static","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","AppModule","declarations","providers","bootstrap","httpOptions","headers","DataService","httpClient","first","prev","next","last","usersApiUrl","get","pipe","handleError","params","fromString","observe","parseLinkHeader","url","error","errorMessage","ErrorEvent","message","status","window","alert","header","length","parts","split","links","forEach","p","section","replace","trim","name","Users","handleCrudError","_","post","u","put","delete","formData","reportProgress","operation","result","providedIn","DetailsComponent","route","user","getUserById","data","deleteUser","getUserDetails","snapshot","EditUserComponent","popUserFields","setValue","updateUser","_id","showUserDetails","onFormEditSubmit","HomeComponent","UsersComponent","destroy$","users","displayedColumns","getUsers","unsubscribe","environment","production","bootstrapModule","catch"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.less']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>about works!</p>\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { DataService } from '../data.service';\n\n/** Error when invalid control is dirty, touched, or submitted. */\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.less']\n})\nexport class AddUserComponent implements OnInit {\n  @ViewChild(\"fileUpload\", { static: false }) fileUpload: ElementRef; files = [];\n\n  constructor(private router: Router, private dataService: DataService, private formBuilder: FormBuilder) { }\n  usersForm: FormGroup;\n  matcher = new MyErrorStateMatcher();\n\n  firstName = '';\n  lastName = '';\n  prefixOptions = ['Mr.', 'Mrs.', 'Ms.', 'Dr.', 'Miss.',];\n  title = '';\n  jobDescriptor = '';\n  phoneNumber = '';\n  email = '';\n  imageUrl = '';\n\n  isLoadingResults = false;\n\n  ngOnInit(): void {\n    this.initUserForm();\n  }\n  private initUserForm() {\n    this.usersForm = this.formBuilder.group({\n      firstName: [null, Validators.required],\n      lastName: [null, Validators.required],\n      prefix: [null, Validators.required],\n      title: [null, Validators.required],\n      jobDescriptor: [null],\n      phoneNumber: [null, Validators.required],\n      email: [null, Validators.required],\n      imageUrl: [null],\n    });\n  }\n\n  onFormSubmit() {\n    this.isLoadingResults = true;\n    this.dataService.addUser(this.usersForm.value)\n      .subscribe((res: any) => {\n        const id = res.id;\n        this.isLoadingResults = false;\n        this.router.navigate(['/details', id]);\n      }, (err: any) => {\n        console.log(err);\n        this.isLoadingResults = false;\n      });\n  }\n\n}\n","<div class=\"example-container mat-elevation-z8\">\n    <h2>Add User</h2>\n    <div class=\"example-loading-shade\" *ngIf=\"isLoadingResults\">\n        <mat-spinner *ngIf=\"isLoadingResults\"></mat-spinner>\n    </div>\n    <div class=\"button-row\">\n        <a mat-flat-button color=\"primary\" [routerLink]=\"['/users']\">\n            <mat-icon>list</mat-icon>\n        </a>\n        <!-- <a mat-flat-button color=\"primary\" (click)=\"casesDetails()\"><mat-icon>info</mat-icon></a> -->\n    </div>\n    <mat-card class=\"example-card\">\n        <form [formGroup]=\"usersForm\" (ngSubmit)=\"onFormSubmit()\">\n            <mat-form-field class=\"example-full-width\">\n                <mat-label>Prefix</mat-label>\n                <mat-select formControlName=\"prefix\">\n                    <mat-option *ngFor=\"let prfxOption of prefixOptions\" [value]=\"prfxOption\">\n                        {{prfxOption}}\n                    </mat-option>\n                </mat-select>\n                <mat-error>\n                    <span *ngIf=\"!usersForm.get('prefix').valid && usersForm.get('prefix').touched\">Please choose\n                        Prefix</span>\n                </mat-error>\n            </mat-form-field>\n            <mat-form-field class=\"example-full-width\">\n                <mat-label>First Name</mat-label>\n                <input matInput placeholder=\"First Name\" formControlName=\"firstName\" [errorStateMatcher]=\"matcher\">\n                <mat-error>\n                    <span *ngIf=\"!usersForm.get('firstName').valid && usersForm.get('firstName').touched\">Please enter\n                        First Name</span>\n                </mat-error>\n            </mat-form-field>\n\n            <mat-form-field class=\"example-full-width\">\n                <mat-label>lastName</mat-label>\n                <input matInput placeholder=\"lastName\" formControlName=\"lastName\" [errorStateMatcher]=\"matcher\">\n                <mat-error>\n                    <span *ngIf=\"!usersForm.get('lastName').valid && usersForm.get('lastName').touched\">Please enter\n                        lastName</span>\n                </mat-error>\n            </mat-form-field>\n\n            <mat-form-field class=\"example-full-width\">\n                <mat-label>title</mat-label>\n                <input matInput placeholder=\"title\" formControlName=\"title\" [errorStateMatcher]=\"matcher\">\n                <mat-error>\n                    <span *ngIf=\"!usersForm.get('title').valid && usersForm.get('title').touched\">Please enter\n                        title</span>\n                </mat-error>\n            </mat-form-field>\n\n            <mat-form-field class=\"example-full-width\">\n                <mat-label>jobDescriptor</mat-label>\n                <input matInput placeholder=\"jobDescriptor\" formControlName=\"jobDescriptor\"\n                    [errorStateMatcher]=\"matcher\">\n                <mat-error>\n                    <span *ngIf=\"!usersForm.get('jobDescriptor').valid && usersForm.get('jobDescriptor').touched\">Please\n                        enter jobDescriptor</span>\n                </mat-error>\n            </mat-form-field>\n\n            <mat-form-field class=\"example-full-width\">\n                <mat-label>phoneNumber</mat-label>\n                <input matInput placeholder=\"phoneNumber\" formControlName=\"phoneNumber\" [errorStateMatcher]=\"matcher\">\n                <mat-error>\n                    <span *ngIf=\"!usersForm.get('phoneNumber').valid && usersForm.get('phoneNumber').touched\">Please\n                        enter phoneNumber</span>\n                </mat-error>\n            </mat-form-field>\n\n            <mat-form-field class=\"example-full-width\">\n                <mat-label>email</mat-label>\n                <input matInput placeholder=\"email\" formControlName=\"email\" [errorStateMatcher]=\"matcher\">\n                <mat-error>\n                    <span *ngIf=\"!usersForm.get('email').valid && usersForm.get('email').touched\">Please enter\n                        email</span>\n                </mat-error>\n            </mat-form-field>\n\n            <mat-label>Upload</mat-label>\n            <input placeholder=\"Upload\" formControlName=\"imageUrl\" accept=\"image/*\" type=\"file\">\n\n            <div class=\"button-row\">\n                <button type=\"submit\" [disabled]=\"!usersForm.valid\" mat-flat-button color=\"primary\">\n                    <mat-icon>save</mat-icon>\n                </button>\n            </div>\n        </form>\n    </mat-card>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { AboutComponent } from './about/about.component';\nimport { UsersComponent } from './users/users.component';\nimport { DetailsComponent } from './details/details.component';\nimport { AddUserComponent } from './add-user/add-user.component';\nimport { EditUserComponent } from './edit-user/edit-user.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full'},\n  { path: 'home', component: HomeComponent },\n  { path: 'about', component: AboutComponent },\n  { path: 'users', component: UsersComponent },\n  { path: 'details/:id', component: DetailsComponent },\n  { path: 'add-user', component: AddUserComponent },\n  { path: 'edit-user/:id', component: EditUserComponent },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent {\n}\n","<mat-toolbar color=\"primary\">\r\n    <h1>\r\n        Angular 9 project\r\n    </h1>\r\n    <button mat-button routerLink=\"/\">Home</button>\r\n    <button mat-button routerLink=\"/about\">About</button>\r\n    <button mat-button routerLink=\"/users\">Users</button>\r\n</mat-toolbar>\r\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HomeComponent } from './home/home.component';\nimport { AboutComponent } from './about/about.component';\nimport { UsersComponent } from './users/users.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { DetailsComponent } from './details/details.component';\nimport { AddUserComponent } from './add-user/add-user.component';\nimport { FormsModule, ReactiveFormsModule }         from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { EditUserComponent } from './edit-user/edit-user.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    AboutComponent,\n    UsersComponent,\n    DetailsComponent,\n    AddUserComponent,\n    EditUserComponent,\n  ],\n  imports: [\n    ReactiveFormsModule,\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCardModule,\n    MatProgressSpinnerModule,\n    MatInputModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatSortModule,\n    MatTableModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatButtonToggleModule,\n    MatSelectModule,\n  ],\n  exports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpParams, HttpHeaders, HttpEvent, HttpEventType } from '@angular/common/http';\nimport { throwError, Observable, of} from 'rxjs';\nimport { retry, catchError, tap, map } from 'rxjs/operators';\nimport { User } from './user';\n\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  public first: string = \"\";\n  public prev: string = \"\";\n  public next: string = \"\";\n  public last: string = \"\";\n\n  private usersApiUrl = \"http://localhost:3000/users\";\n\n  constructor(private httpClient: HttpClient) { }\n  //GET USERS\n  public sendGetUsersRequest() {\n    return this.httpClient.get(this.usersApiUrl).pipe(retry(3), catchError(this.handleError));\n  }\n  //GET FIRST 4 USERS\n  public sendGetFirstFourUsersRequest() {\n    // Add safe, URL encoded _page and _limit parameters \n    return this.httpClient.get<User>(this.usersApiUrl, { params: new HttpParams({ fromString: \"_page=1&_limit=4\" }), observe: \"response\" }).pipe(retry(3), catchError(this.handleError), tap(res => {\n      console.log(res.headers.get('Link'));\n      this.parseLinkHeader(res.headers.get('Link'));\n    }));\n  }\n  //GET FROM URL\n  public sendGetRequestToUrl(url: string) {\n    return this.httpClient.get<User>(url, { observe: \"response\" }).pipe(retry(3), catchError(this.handleError), tap(res => {\n      console.log(res.headers.get('Link'));\n      this.parseLinkHeader(res.headers.get('Link'));\n\n    }));\n  }\n  //ERROR HANDLING\n  handleError(error: HttpErrorResponse) {\n    let errorMessage = 'Unknown error!';\n    if (error.error instanceof ErrorEvent) {\n      // Client-side errors\n      errorMessage = `Error: ${error.error.message}`;\n    } else {\n      // Server-side errors\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    window.alert(errorMessage);\n    return throwError(errorMessage);\n  }\n  parseLinkHeader(header) {\n    if (header.length == 0) {\n      return;\n    }\n\n    let parts = header.split(',');\n    var links = {};\n    parts.forEach(p => {\n      let section = p.split(';');\n      var url = section[0].replace(/<(.*)>/, '$1').trim();\n      var name = section[1].replace(/rel=\"(.*)\"/, '$1').trim();\n      links[name] = url;\n\n    });\n\n    this.first = links[\"first\"];\n    this.last = links[\"last\"];\n    this.prev = links[\"prev\"];\n    this.next = links[\"next\"];\n  }\n  //SIMPLE CRUD FUNCTIONS\n  getUsers(): Observable<User[]> {\n    return this.httpClient.get<User[]>(`${this.usersApiUrl}`)\n      .pipe(\n        tap(Users => console.log('fetched Users')),\n        catchError(this.handleCrudError('getUsers', []))\n      );\n  }\n\n  getUserById(id: string): Observable<User> {\n    const url = `${this.usersApiUrl}/${id}`;\n    return this.httpClient.get<User>(url).pipe(\n      tap(_ => console.log(`fetched Users id=${id}`)),\n      catchError(this.handleCrudError<User>(`getUsersById id=${id}`))\n    );\n  }\n\n  addUser(Users: User): Observable<User> {\n    return this.httpClient.post<User>(this.usersApiUrl, Users, httpOptions).pipe(\n      tap((u: User) => console.log(`added Users w/ id=${u.id}`)),\n      catchError(this.handleCrudError<User>('addUsers'))\n    );\n  }\n\n  updateUser(id: number, Users: User): Observable<any> {\n    const url = `${this.usersApiUrl}/${id}`;\n    return this.httpClient.put(url, Users, httpOptions).pipe(\n      tap(_ => console.log(`updated Users id=${id}`)),\n      catchError(this.handleCrudError<any>('updateUsers'))\n    );\n  }\n\n  deleteUser(id: string): Observable<User> {\n    const url = `${this.usersApiUrl}/${id}`;\n    return this.httpClient.delete<User>(url, httpOptions).pipe(\n      tap(_ => console.log(`deleted Users id=${id}`)),\n      catchError(this.handleCrudError<User>('deleteUsers'))\n    );\n  }\n\n\n  public upload(formData) {\n    return this.httpClient.post<any>(this.usersApiUrl, formData, {  \n        reportProgress: true,  \n        observe: 'events'  \n      });\n    }\n  //GENERAL ERROR HANDLING FOR THE CRUD FUNCTIONS\n  handleCrudError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n  \n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n  \n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { User } from '../user';\nimport { DataService } from '../data.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n@Component({\n  selector: 'app-details',\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.less']\n})\nexport class DetailsComponent implements OnInit {\n  user: User = { id: 0, firstName: '', lastName: '', prefix: '', title: '', jobDescriptor: '', phoneNumber: '', email: '', imageUrl: '' };\n  isLoadingResults = true;\n  constructor(private route: ActivatedRoute, private dataService: DataService, private router: Router) { }\n\n  getUserDetails(id: string) {\n    this.dataService.getUserById(id)\n      .subscribe((data: any) => {\n        this.user = data;\n        console.log(this.user);\n        this.isLoadingResults = false;\n      });\n  }\n  deleteUser(id: any) {\n    this.isLoadingResults = true;\n    this.dataService.deleteUser(id)\n      .subscribe(res => {\n        this.isLoadingResults = false;\n        this.router.navigate(['/users']);\n      }, (err) => {\n        console.log(err);\n        this.isLoadingResults = false;\n      }\n      );\n  }\n  ngOnInit(): void {\n    this.getUserDetails(this.route.snapshot.params.id);\n  }\n}\n","<div class=\"example-container mat-elevation-z8\">\n    <h2>User Details</h2>\n    <div class=\"example-loading-shade\"\n         *ngIf=\"isLoadingResults\">\n      <mat-spinner *ngIf=\"isLoadingResults\"></mat-spinner>\n    </div>\n    <div class=\"button-row\">\n      <a mat-flat-button color=\"primary\" [routerLink]=\"['/users']\"><mat-icon>list</mat-icon></a>\n    </div>\n    <mat-card class=\"example-card\">\n        <mat-card-header>\n            <mat-card-title><span>{{user.prefix}}</span>{{user.firstName}}</mat-card-title>\n            <mat-card-subtitle>{{user.lastName}}\n            </mat-card-subtitle>\n        </mat-card-header>\n        <mat-card-content>\n            <p>{{user.title}}</p>\n            <p>{{user.jobDescriptor}}</p>\n            <p>{{user.phoneNumber}}</p>\n            <p>{{user.email}}</p>\n            <img style=\"height:30%; width: 30%;\" src=\"{{ user.imageUrl }}\" />\n        </mat-card-content>\n        <mat-card-actions>\n            <a mat-flat-button color=\"primary\" [routerLink]=\"['/edit-user', user.id]\"><mat-icon>edit</mat-icon> Edit</a>\n            <a mat-flat-button color=\"warn\" (click)=\"deleteUser(user.id)\"><mat-icon>delete</mat-icon> Delete</a>\n          </mat-card-actions>\n    </mat-card>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { DataService } from '../data.service';\nimport { MyErrorStateMatcher } from '../add-user/add-user.component';\n\n@Component({\n  selector: 'app-edit-user',\n  templateUrl: './edit-user.component.html',\n  styleUrls: ['./edit-user.component.less']\n})\nexport class EditUserComponent implements OnInit {\n\n  constructor(private router: Router, private route: ActivatedRoute, private dataService: DataService, private formBuilder: FormBuilder) { }\n\n  usersForm: FormGroup;\n  matcher = new MyErrorStateMatcher();\n\n  id=0;\n  firstName = '';\n  lastName = '';\n  prefixOptions = ['Mr.', 'Mrs.', 'Ms.', 'Dr.', 'Miss.',];\n  title = '';\n  jobDescriptor = '';\n  phoneNumber = '';\n  email = '';\n  imageUrl = '';\n\n  isLoadingResults = false;\n\n  ngOnInit(): void {\n    this.popUserFields();\n  }\n  private popUserFields() {\n    this.getUserById(this.route.snapshot.params.id);\n    this.usersForm = this.formBuilder.group({\n      firstName: [null, Validators.required],\n      lastName: [null, Validators.required],\n      prefix: [null, Validators.required],\n      title: [null, Validators.required],\n      jobDescriptor: [null, Validators.required],\n      phoneNumber: [null, Validators.required],\n      email: [null, Validators.required],\n      imageUrl: [null, Validators.required]\n    });\n  }\n\n  getUserById(id: any) {\n    this.dataService.getUserById(id).subscribe((data: any) => {\n      this.id = data.id;\n      this.usersForm.setValue({\n        firstName: data.firstName,\n        lastName: data.lastName,\n        prefix: data.prefix,\n        title: data.title,\n        jobDescriptor: data.jobDescriptor,\n        phoneNumber: data.phoneNumber,\n        email: data.email,\n        imageUrl: data.imageUrl\n      });\n    });\n  }\n  onFormEditSubmit() {\n    this.isLoadingResults = true;\n    this.dataService.updateUser(this.id, this.usersForm.value)\n      .subscribe((res: any) => {\n          const id = res._id;\n          this.isLoadingResults = false;\n          this.router.navigate(['/details', id]);\n        }, (err: any) => {\n          console.log(err);\n          this.isLoadingResults = false;\n        }\n      );\n  }\n  showUserDetails() {\n    this.router.navigate(['/details', this.id]);\n  }\n}\n","<div class=\"example-container mat-elevation-z8\">\n    <h2>Edit User</h2>\n    <div class=\"example-loading-shade\" *ngIf=\"isLoadingResults\">\n        <mat-spinner *ngIf=\"isLoadingResults\"></mat-spinner>\n    </div>\n    <div class=\"button-row\">\n        <a mat-flat-button color=\"primary\" [routerLink]=\"['/users']\">\n            <mat-icon>list</mat-icon>\n        </a>\n        <a mat-flat-button color=\"primary\" (click)=\"showUserDetails()\"><mat-icon>info</mat-icon></a>\n    </div>\n    <mat-card class=\"example-card\">\n        <form [formGroup]=\"usersForm\" (ngSubmit)=\"onFormEditSubmit()\">\n            <mat-form-field class=\"example-full-width\">\n                <mat-label>Prefix</mat-label>\n                <mat-select formControlName=\"prefix\">\n                    <mat-option *ngFor=\"let prfxOption of prefixOptions\" [value]=\"prfxOption\">\n                        {{prfxOption}}\n                    </mat-option>\n                </mat-select>\n                <mat-error>\n                    <span *ngIf=\"!usersForm.get('prefix').valid && usersForm.get('prefix').touched\">Please choose\n                        Prefix</span>\n                </mat-error>\n            </mat-form-field>\n            <mat-form-field class=\"example-full-width\">\n                <mat-label>First Name</mat-label>\n                <input matInput placeholder=\"First Name\" formControlName=\"firstName\" [errorStateMatcher]=\"matcher\">\n                <mat-error>\n                    <span *ngIf=\"!usersForm.get('firstName').valid && usersForm.get('firstName').touched\">Please enter\n                        First Name</span>\n                </mat-error>\n            </mat-form-field>\n\n            <mat-form-field class=\"example-full-width\">\n                <mat-label>lastName</mat-label>\n                <input matInput placeholder=\"lastName\" formControlName=\"lastName\" [errorStateMatcher]=\"matcher\">\n                <mat-error>\n                    <span *ngIf=\"!usersForm.get('lastName').valid && usersForm.get('lastName').touched\">Please enter\n                        lastName</span>\n                </mat-error>\n            </mat-form-field>\n\n            <mat-form-field class=\"example-full-width\">\n                <mat-label>title</mat-label>\n                <input matInput placeholder=\"title\" formControlName=\"title\" [errorStateMatcher]=\"matcher\">\n                <mat-error>\n                    <span *ngIf=\"!usersForm.get('title').valid && usersForm.get('title').touched\">Please enter\n                        title</span>\n                </mat-error>\n            </mat-form-field>\n\n            <mat-form-field class=\"example-full-width\">\n                <mat-label>jobDescriptor</mat-label>\n                <input matInput placeholder=\"jobDescriptor\" formControlName=\"jobDescriptor\"\n                    [errorStateMatcher]=\"matcher\">\n                <mat-error>\n                    <span *ngIf=\"!usersForm.get('jobDescriptor').valid && usersForm.get('jobDescriptor').touched\">Please\n                        enter jobDescriptor</span>\n                </mat-error>\n            </mat-form-field>\n\n            <mat-form-field class=\"example-full-width\">\n                <mat-label>phoneNumber</mat-label>\n                <input matInput placeholder=\"phoneNumber\" formControlName=\"phoneNumber\" [errorStateMatcher]=\"matcher\">\n                <mat-error>\n                    <span *ngIf=\"!usersForm.get('phoneNumber').valid && usersForm.get('phoneNumber').touched\">Please\n                        enter phoneNumber</span>\n                </mat-error>\n            </mat-form-field>\n\n            <mat-form-field class=\"example-full-width\">\n                <mat-label>email</mat-label>\n                <input matInput placeholder=\"email\" formControlName=\"email\" [errorStateMatcher]=\"matcher\">\n                <mat-error>\n                    <span *ngIf=\"!usersForm.get('email').valid && usersForm.get('email').touched\">Please enter\n                        email</span>\n                </mat-error>\n            </mat-form-field>\n\n            <div class=\"button-row\">\n                <button type=\"submit\" [disabled]=\"!usersForm.valid\" mat-flat-button color=\"primary\">\n                    <mat-icon>save</mat-icon>\n                </button>\n            </div>\n        </form>\n    </mat-card>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.less']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { User } from '../user';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.less']\n})\nexport class UsersComponent implements OnInit , OnDestroy {\n  destroy$: Subject<boolean> = new Subject<boolean>();\n  users:User[] = [];\n  displayedColumns: string[] = ['prefix', 'firstName', 'lastName', 'title', 'jobDescriptor'];\n  isLoadingResults = true;\n  constructor(private dataService: DataService) { }\n\n  ngOnInit(): void {\n    this.dataService.getUsers()\n    .subscribe((res: any) => {\n      this.users = res;\n      console.log(this.users);\n      this.isLoadingResults = false;\n    }, err => {\n      console.log(err);\n      this.isLoadingResults = false;\n    });\n  }  \n  ngOnDestroy() {\n    this.destroy$.next(true);\n    // Unsubscribe from the subject\n    this.destroy$.unsubscribe();\n  }\n\n}\n","<div class=\"example-container mat-elevation-z8\">\n    <h2>Users List</h2>\n    <div class=\"example-loading-shade\" *ngIf=\"isLoadingResults\">\n        <mat-spinner *ngIf=\"isLoadingResults\"></mat-spinner>\n    </div>\n    <div class=\"button-row\">\n        <a mat-flat-button color=\"primary\" [routerLink]=\"['/add-user']\">\n            <mat-icon>add</mat-icon> User\n        </a>\n        <a mat-flat-button color=\"accent\" [routerLink]=\"['/Users-stat']\">\n            <mat-icon>bar_chart</mat-icon> Statistic\n        </a>\n    </div>\n    <div class=\"mat-elevation-z8\">\n        <table mat-table [dataSource]=\"users\" class=\"example-table\" matSort matSortActive=\"firstName\" matSortDisableClear\n            matSortDirection=\"asc\">\n\n            <ng-container matColumnDef=\"prefix\">\n                <th mat-header-cell *matHeaderCellDef>Users prefix</th>\n                <td mat-cell *matCellDef=\"let row\">{{row.prefix}}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"lastName\">\n                <th mat-header-cell *matHeaderCellDef>Users lastName</th>\n                <td mat-cell *matCellDef=\"let row\">{{row.lastName}}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"firstName\">\n                <th mat-header-cell *matHeaderCellDef>Users firstName</th>\n                <td mat-cell *matCellDef=\"let row\">{{row.firstName}}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"title\">\n                <th mat-header-cell *matHeaderCellDef>Users title</th>\n                <td mat-cell *matCellDef=\"let row\">{{row.title}}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"jobDescriptor\">\n                <th mat-header-cell *matHeaderCellDef>Users Job Description</th>\n                <td mat-cell *matCellDef=\"let row\">{{row.jobDescriptor}}</td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" [routerLink]=\"['/details/', row.id]\">\n            </tr>\n        </table>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}